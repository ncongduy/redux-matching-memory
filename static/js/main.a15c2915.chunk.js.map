{"version":3,"sources":["features/board/boardSlice.js","features/score/Score.js","features/board/cardRow/card/Card.js","features/board/cardRow/CardRow.js","features/board/Board.js","App.js","app/store.js","reportWebVitals.js","index.js"],"names":["initialState","id","contents","visible","matched","wordPairs","setBoard","type","payload","words","newWordPairs","reps","length","i","wordIndex","Math","floor","random","push","splice","randomWords","selectBoard","state","board","map","card","selectVisibleIDs","filter","selectMatchedIDs","Score","cardsMatched","useSelector","className","Card","visibleIDs","matchedIDs","dispatch","useDispatch","cardStyle","click","flipCard","flipHandler","cardText","src","alt","includes","onClick","CardRow","content","cards","Board","currentBoard","numberOfCards","rows","getRowCards","row","rowCards","j","cardIndex","App","rootReducer","combineReducers","action","setState","forEach","element","index","flipState","cardID","index1","index2","undefined","card1","card2","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a15c2915.chunk.js","sourcesContent":["const initialState = [\r\n  { id: 0, contents: \"Provider\", visible: true, matched: true },\r\n  { id: 1, contents: \"Provider\", visible: true, matched: true },\r\n  { id: 2, contents: \"selector\", visible: true, matched: true },\r\n  { id: 3, contents: \"selector\", visible: true, matched: true },\r\n  { id: 4, contents: \"useSelector()\", visible: true, matched: true },\r\n  { id: 5, contents: \"useSelector()\", visible: true, matched: true },\r\n  { id: 6, contents: \"useDispatch()\", visible: true, matched: true },\r\n  { id: 7, contents: \"useDispatch()\", visible: true, matched: true },\r\n  { id: 8, contents: \"Pure Function\", visible: true, matched: true },\r\n  { id: 9, contents: \"Pure Function\", visible: true, matched: true },\r\n  { id: 10, contents: \"react-redux\", visible: true, matched: true },\r\n  { id: 11, contents: \"react-redux\", visible: true, matched: true },\r\n];\r\n\r\nexport const boardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"board/setBoard\":\r\n      let setState = [];\r\n      action.payload.forEach((element, index) =>\r\n        setState.push({\r\n          id: index,\r\n          contents: element,\r\n          visible: false,\r\n          matched: false,\r\n        })\r\n      );\r\n      return setState;\r\n    case \"board/flipCard\":\r\n      let flipState = [...state];\r\n      const cardID = action.payload;\r\n      flipState[cardID] = { ...state[cardID], visible: true };\r\n\r\n      const [index1, index2] = flipState\r\n        .filter((card) => card.visible)\r\n        .map((card) => card.id);\r\n      if (index2 !== undefined) {\r\n        const card1 = flipState[index1];\r\n        const card2 = flipState[index2];\r\n        if (card1.contents === card2.contents) {\r\n          flipState[index1] = { ...card1, visible: false, matched: true };\r\n          flipState[index2] = { ...card2, visible: false, matched: true };\r\n        }\r\n      }\r\n      return flipState;\r\n    case \"board/resetCards\":\r\n      return state.map((card) => ({ ...card, visible: false }));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst wordPairs = [\r\n  \"Provider\",\r\n  \"Provider\",\r\n  \"selector\",\r\n  \"selector\",\r\n  \"useSelector()\",\r\n  \"useSelector()\",\r\n  \"useDispatch()\",\r\n  \"useDispatch()\",\r\n  \"Pure Function\",\r\n  \"Pure Function\",\r\n  \"react-redux\",\r\n  \"react-redux\",\r\n];\r\n\r\nconst randomWords = () => {\r\n  let words = [];\r\n  let newWordPairs = [...wordPairs];\r\n  const reps = newWordPairs.length;\r\n  for (let i = 0; i < reps; i++) {\r\n    const wordIndex = Math.floor(Math.random() * newWordPairs.length);\r\n    words.push(newWordPairs[wordIndex]);\r\n    newWordPairs.splice(wordIndex, 1);\r\n  }\r\n\r\n  return words;\r\n};\r\n\r\n// action creators\r\nexport const setBoard = () => {\r\n  const words = randomWords();\r\n  return {\r\n    type: \"board/setBoard\",\r\n    payload: words,\r\n  };\r\n};\r\n\r\nexport const flipCard = (id) => {\r\n  return {\r\n    type: \"board/flipCard\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const resetCards = (indices) => {\r\n  return {\r\n    type: \"board/resetCards\",\r\n  };\r\n};\r\n\r\n// selectors\r\nexport const selectBoard = (state) =>\r\n  state.board.map((card) => ({ id: card.id, contents: card.contents }));\r\n\r\nexport const selectVisibleIDs = (state) =>\r\n  state.board.filter((card) => card.visible).map((card) => card.id);\r\n\r\nexport const selectMatchedIDs = (state) =>\r\n  state.board.filter((card) => card.matched).map((card) => card.id);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectMatchedIDs } from \"../board/boardSlice.js\";\r\n\r\nexport const Score = () => {\r\n  const cardsMatched = useSelector(selectMatchedIDs);\r\n\r\n  return (\r\n    <div className=\"score-container\">Matched: {cardsMatched.length}</div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectVisibleIDs,\r\n  flipCard,\r\n  selectMatchedIDs,\r\n  resetCards,\r\n} from \"../../boardSlice.js\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nlet cardLogo =\r\n  \"https://static-assets.codecademy.com/Courses/Learn-Redux/matching-game/codecademy_logo.png\";\r\n\r\nexport const Card = ({ id, contents }) => {\r\n  const visibleIDs = useSelector(selectVisibleIDs);\r\n  const matchedIDs = useSelector(selectMatchedIDs);\r\n  const dispatch = useDispatch();\r\n\r\n  // flip card action\r\n  const flipHandler = (id) => {\r\n    dispatch(flipCard(id));\r\n  };\r\n\r\n  let cardStyle = \"resting\";\r\n  let click = () => flipHandler(id);\r\n\r\n  let cardText = (\r\n    <img src={cardLogo} className=\"logo-placeholder\" alt=\"Card option\" />\r\n  );\r\n\r\n  // 1st if statement\r\n  // implement card id array membership check\r\n  if (visibleIDs.includes(id) || matchedIDs.includes(id)) {\r\n    cardText = contents;\r\n    click = () => {};\r\n  }\r\n\r\n  // 2nd if statement\r\n  // implement card id array membership check\r\n  if (matchedIDs.includes(id)) {\r\n    cardStyle = \"matched\";\r\n  }\r\n\r\n  // 3rd if statement\r\n  // implement number of flipped cards check\r\n  if (visibleIDs.length === 2) {\r\n    click = () => {\r\n      dispatch(resetCards());\r\n    };\r\n  }\r\n\r\n  if (visibleIDs.length === 2 && visibleIDs.includes(id)) {\r\n    cardStyle = \"no-match\";\r\n  }\r\n\r\n  return (\r\n    <button onClick={click} className={`card ${cardStyle}`}>\r\n      {cardText}\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"./card/Card.js\";\r\n\r\nexport const CardRow = ({ cards }) => {\r\n  const content = cards.map((card) => (\r\n    <Card key={card.id} id={card.id} contents={card.contents} />\r\n  ));\r\n\r\n  return <>{content}</>;\r\n};\r\n","import React from \"react\";\r\nimport { CardRow } from \"./cardRow/CardRow.js\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectBoard } from \"./boardSlice.js\";\r\n\r\nexport const Board = () => {\r\n  const currentBoard = useSelector(selectBoard);\r\n\r\n  const numberOfCards = currentBoard.length;\r\n  const columns = 3;\r\n  const rows = Math.floor(numberOfCards / columns);\r\n\r\n  const getRowCards = (row) => {\r\n    const rowCards = [];\r\n    for (let j = 0; j < columns; j++) {\r\n      const cardIndex = row * columns + j;\r\n      rowCards.push(currentBoard[cardIndex]);\r\n    }\r\n    return rowCards;\r\n  };\r\n\r\n  let content = [];\r\n  for (let row = 0; row < rows; row++) {\r\n    const rowCards = getRowCards(row);\r\n    content.push(<CardRow key={row} cards={rowCards} />);\r\n  }\r\n  return <div className=\"cards-container\">{content}</div>;\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { Score } from \"./features/score/Score\";\nimport { Board } from \"./features/board/Board\";\nimport { useDispatch } from \"react-redux\";\nimport { setBoard, resetCards } from \"./features/board/boardSlice.js\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const startGameHandler = () => {\n    dispatch(setBoard());\n  };\n\n  const tryAgainHandler = () => {\n    dispatch(resetCards());\n  };\n\n  return (\n    <div className=\"App\">\n      <Score />\n      <Board />\n      <footer className=\"footer\">\n        <button onClick={startGameHandler} className=\"start-button\">\n          Start Game\n        </button>\n        <button onClick={tryAgainHandler} className=\"try-new-pair-button\">\n          Try New Pair\n        </button>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\r\n\r\nimport { boardReducer } from '../features/board/boardSlice';\r\n\r\nconst rootReducer = combineReducers({\r\n  board: boardReducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}